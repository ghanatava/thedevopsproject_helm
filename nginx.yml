apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  minReadySeconds: 10
  strategy:
    type: RollingUpdate 
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
      - name: frontend
        image: ghanatava/auth-frontend
        envFrom:
          - configMapRef:
              name: confmap
        command: ["npm","run","build"]
        volumeMounts:
        - name: frontend
          mountPath: /app/build
      containers:
      - name: nginx
        image: ghanatava/auth-nginx
        ports:
          - containerPort: 80
        volumeMounts:
        - name: static
          mountPath: static
        - name: frontend
          mountPath: /app/build
      volumes:
        - name: static
          persistentVolumeClaim:
            claimName: static-pvc

        - name: frontend
          persistentVolumeClaim:
            claimName: frontend-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: frontend
spec:
  capacity:
    storage: 1Gi
  accessModes: 
    - ReadWriteMany
  storageClassName: standard
  hostPath:
    path: /mnt/frontend
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frontend-pvc
spec:
  accessModes: 
    - ReadWriteMany
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi
    limits:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      


        

      
