apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  labels:
    app: django
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-progress
        image: busybox
        command: ['sh','-c','until nc -z postgres-svc 5432; do sleep 1; done;']
      containers:
      - name: django
        image: ghanatava/auth-backend
        envFrom: 
          - configMapRef:
              name: confmap
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: static
          mountPath: /app/static
      volumes:
      - name: static
        persistentVolumeClaim:
          claimName: static-pvc

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: static
spec:
  capacity:
    storage: 1Gi
  accessModes: 
    - ReadWriteMany
  storageClassName: standard
  hostPath:
    path: /mnt/data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: static-pvc
spec:
  accessModes: 
    - ReadWriteMany
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi
    limits:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: django
  ports:
  - protocol: TCP  # Corrected 'potocol' to 'protocol'
    port: 80
    targetPort: 8000
